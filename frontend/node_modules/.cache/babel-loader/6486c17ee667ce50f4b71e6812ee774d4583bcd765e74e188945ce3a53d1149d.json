{"ast":null,"code":"import _objectSpread from \"C:/achados-perdidos/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"C:/achados-perdidos/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"fontFamily\", \"fontSize\", \"fontWeightLight\", \"fontWeightRegular\", \"fontWeightMedium\", \"fontWeightBold\", \"htmlFontSize\", \"allVariants\", \"pxToRem\"];\nimport deepmerge from '@mui/utils/deepmerge';\nfunction round(value) {\n  return Math.round(value * 1e5) / 1e5;\n}\nconst caseAllCaps = {\n  textTransform: 'uppercase'\n};\nconst defaultFontFamily = '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif';\n\n/**\r\n * @see @link{https://m2.material.io/design/typography/the-type-system.html}\r\n * @see @link{https://m2.material.io/design/typography/understanding-typography.html}\r\n */\nexport default function createTypography(palette, typography) {\n  const _ref = typeof typography === 'function' ? typography(palette) : typography,\n    {\n      fontFamily = defaultFontFamily,\n      // The default font size of the Material Specification.\n      fontSize = 14,\n      // px\n      fontWeightLight = 300,\n      fontWeightRegular = 400,\n      fontWeightMedium = 500,\n      fontWeightBold = 700,\n      // Tell MUI what's the font-size on the html element.\n      // 16px is the default font-size used by browsers.\n      htmlFontSize = 16,\n      // Apply the CSS properties to all the variants.\n      allVariants,\n      pxToRem: pxToRem2\n    } = _ref,\n    other = _objectWithoutProperties(_ref, _excluded);\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof fontSize !== 'number') {\n      console.error('MUI: `fontSize` is required to be a number.');\n    }\n    if (typeof htmlFontSize !== 'number') {\n      console.error('MUI: `htmlFontSize` is required to be a number.');\n    }\n  }\n  const coef = fontSize / 14;\n  const pxToRem = pxToRem2 || (size => \"\".concat(size / htmlFontSize * coef, \"rem\"));\n  const buildVariant = (fontWeight, size, lineHeight, letterSpacing, casing) => _objectSpread(_objectSpread(_objectSpread({\n    fontFamily,\n    fontWeight,\n    fontSize: pxToRem(size),\n    // Unitless following https://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/\n    lineHeight\n  }, fontFamily === defaultFontFamily ? {\n    letterSpacing: \"\".concat(round(letterSpacing / size), \"em\")\n  } : {}), casing), allVariants);\n  const variants = {\n    h1: buildVariant(fontWeightLight, 96, 1.167, -1.5),\n    h2: buildVariant(fontWeightLight, 60, 1.2, -0.5),\n    h3: buildVariant(fontWeightRegular, 48, 1.167, 0),\n    h4: buildVariant(fontWeightRegular, 34, 1.235, 0.25),\n    h5: buildVariant(fontWeightRegular, 24, 1.334, 0),\n    h6: buildVariant(fontWeightMedium, 20, 1.6, 0.15),\n    subtitle1: buildVariant(fontWeightRegular, 16, 1.75, 0.15),\n    subtitle2: buildVariant(fontWeightMedium, 14, 1.57, 0.1),\n    body1: buildVariant(fontWeightRegular, 16, 1.5, 0.15),\n    body2: buildVariant(fontWeightRegular, 14, 1.43, 0.15),\n    button: buildVariant(fontWeightMedium, 14, 1.75, 0.4, caseAllCaps),\n    caption: buildVariant(fontWeightRegular, 12, 1.66, 0.4),\n    overline: buildVariant(fontWeightRegular, 12, 2.66, 1, caseAllCaps),\n    // TODO v6: Remove handling of 'inherit' variant from the theme as it is already handled in Material UI's Typography component. Also, remember to remove the associated types.\n    inherit: {\n      fontFamily: 'inherit',\n      fontWeight: 'inherit',\n      fontSize: 'inherit',\n      lineHeight: 'inherit',\n      letterSpacing: 'inherit'\n    }\n  };\n  return deepmerge(_objectSpread({\n    htmlFontSize,\n    pxToRem,\n    fontFamily,\n    fontSize,\n    fontWeightLight,\n    fontWeightRegular,\n    fontWeightMedium,\n    fontWeightBold\n  }, variants), other, {\n    clone: false // No need to clone deep\n  });\n}","map":{"version":3,"names":["deepmerge","round","value","Math","caseAllCaps","textTransform","defaultFontFamily","createTypography","palette","typography","_ref","fontFamily","fontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightBold","htmlFontSize","allVariants","pxToRem","pxToRem2","other","_objectWithoutProperties","_excluded","process","env","NODE_ENV","console","error","coef","size","concat","buildVariant","fontWeight","lineHeight","letterSpacing","casing","_objectSpread","variants","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","button","caption","overline","inherit","clone"],"sources":["C:/achados-perdidos/frontend/node_modules/@mui/material/esm/styles/createTypography.js"],"sourcesContent":["import deepmerge from '@mui/utils/deepmerge';\r\nfunction round(value) {\r\n  return Math.round(value * 1e5) / 1e5;\r\n}\r\nconst caseAllCaps = {\r\n  textTransform: 'uppercase'\r\n};\r\nconst defaultFontFamily = '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif';\r\n\r\n/**\r\n * @see @link{https://m2.material.io/design/typography/the-type-system.html}\r\n * @see @link{https://m2.material.io/design/typography/understanding-typography.html}\r\n */\r\nexport default function createTypography(palette, typography) {\r\n  const {\r\n    fontFamily = defaultFontFamily,\r\n    // The default font size of the Material Specification.\r\n    fontSize = 14,\r\n    // px\r\n    fontWeightLight = 300,\r\n    fontWeightRegular = 400,\r\n    fontWeightMedium = 500,\r\n    fontWeightBold = 700,\r\n    // Tell MUI what's the font-size on the html element.\r\n    // 16px is the default font-size used by browsers.\r\n    htmlFontSize = 16,\r\n    // Apply the CSS properties to all the variants.\r\n    allVariants,\r\n    pxToRem: pxToRem2,\r\n    ...other\r\n  } = typeof typography === 'function' ? typography(palette) : typography;\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if (typeof fontSize !== 'number') {\r\n      console.error('MUI: `fontSize` is required to be a number.');\r\n    }\r\n    if (typeof htmlFontSize !== 'number') {\r\n      console.error('MUI: `htmlFontSize` is required to be a number.');\r\n    }\r\n  }\r\n  const coef = fontSize / 14;\r\n  const pxToRem = pxToRem2 || (size => `${size / htmlFontSize * coef}rem`);\r\n  const buildVariant = (fontWeight, size, lineHeight, letterSpacing, casing) => ({\r\n    fontFamily,\r\n    fontWeight,\r\n    fontSize: pxToRem(size),\r\n    // Unitless following https://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/\r\n    lineHeight,\r\n    // The letter spacing was designed for the Roboto font-family. Using the same letter-spacing\r\n    // across font-families can cause issues with the kerning.\r\n    ...(fontFamily === defaultFontFamily ? {\r\n      letterSpacing: `${round(letterSpacing / size)}em`\r\n    } : {}),\r\n    ...casing,\r\n    ...allVariants\r\n  });\r\n  const variants = {\r\n    h1: buildVariant(fontWeightLight, 96, 1.167, -1.5),\r\n    h2: buildVariant(fontWeightLight, 60, 1.2, -0.5),\r\n    h3: buildVariant(fontWeightRegular, 48, 1.167, 0),\r\n    h4: buildVariant(fontWeightRegular, 34, 1.235, 0.25),\r\n    h5: buildVariant(fontWeightRegular, 24, 1.334, 0),\r\n    h6: buildVariant(fontWeightMedium, 20, 1.6, 0.15),\r\n    subtitle1: buildVariant(fontWeightRegular, 16, 1.75, 0.15),\r\n    subtitle2: buildVariant(fontWeightMedium, 14, 1.57, 0.1),\r\n    body1: buildVariant(fontWeightRegular, 16, 1.5, 0.15),\r\n    body2: buildVariant(fontWeightRegular, 14, 1.43, 0.15),\r\n    button: buildVariant(fontWeightMedium, 14, 1.75, 0.4, caseAllCaps),\r\n    caption: buildVariant(fontWeightRegular, 12, 1.66, 0.4),\r\n    overline: buildVariant(fontWeightRegular, 12, 2.66, 1, caseAllCaps),\r\n    // TODO v6: Remove handling of 'inherit' variant from the theme as it is already handled in Material UI's Typography component. Also, remember to remove the associated types.\r\n    inherit: {\r\n      fontFamily: 'inherit',\r\n      fontWeight: 'inherit',\r\n      fontSize: 'inherit',\r\n      lineHeight: 'inherit',\r\n      letterSpacing: 'inherit'\r\n    }\r\n  };\r\n  return deepmerge({\r\n    htmlFontSize,\r\n    pxToRem,\r\n    fontFamily,\r\n    fontSize,\r\n    fontWeightLight,\r\n    fontWeightRegular,\r\n    fontWeightMedium,\r\n    fontWeightBold,\r\n    ...variants\r\n  }, other, {\r\n    clone: false // No need to clone deep\r\n  });\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}