{"ast":null,"code":"import _objectSpread from \"C:/achados-perdidos/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport clsx from 'clsx';\n\n// Brought from [Base UI](https://github.com/mui/base-ui/blob/master/packages/react/src/merge-props/mergeProps.ts#L119)\n// Use it directly from Base UI once it's a package dependency.\nfunction isEventHandler(key, value) {\n  // This approach is more efficient than using a regex.\n  const thirdCharCode = key.charCodeAt(2);\n  return key[0] === 'o' && key[1] === 'n' && thirdCharCode >= 65 /* A */ && thirdCharCode <= 90 /* Z */ && typeof value === 'function';\n}\nexport default function mergeSlotProps(externalSlotProps, defaultSlotProps) {\n  if (!externalSlotProps) {\n    return defaultSlotProps;\n  }\n  function extractHandlers(externalSlotPropsValue, defaultSlotPropsValue) {\n    const handlers = {};\n    Object.keys(defaultSlotPropsValue).forEach(key => {\n      if (isEventHandler(key, defaultSlotPropsValue[key]) && typeof externalSlotPropsValue[key] === 'function') {\n        // only compose the handlers if both default and external slot props match the event handler\n        handlers[key] = function () {\n          externalSlotPropsValue[key](...arguments);\n          defaultSlotPropsValue[key](...arguments);\n        };\n      }\n    });\n    return handlers;\n  }\n  if (typeof externalSlotProps === 'function' || typeof defaultSlotProps === 'function') {\n    return ownerState => {\n      const defaultSlotPropsValue = typeof defaultSlotProps === 'function' ? defaultSlotProps(ownerState) : defaultSlotProps;\n      const externalSlotPropsValue = typeof externalSlotProps === 'function' ? externalSlotProps(_objectSpread(_objectSpread({}, ownerState), defaultSlotPropsValue)) : externalSlotProps;\n      const className = clsx(ownerState === null || ownerState === void 0 ? void 0 : ownerState.className, defaultSlotPropsValue === null || defaultSlotPropsValue === void 0 ? void 0 : defaultSlotPropsValue.className, externalSlotPropsValue === null || externalSlotPropsValue === void 0 ? void 0 : externalSlotPropsValue.className);\n      const handlers = extractHandlers(externalSlotPropsValue, defaultSlotPropsValue);\n      return _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, defaultSlotPropsValue), externalSlotPropsValue), handlers), !!className && {\n        className\n      }), (defaultSlotPropsValue === null || defaultSlotPropsValue === void 0 ? void 0 : defaultSlotPropsValue.style) && (externalSlotPropsValue === null || externalSlotPropsValue === void 0 ? void 0 : externalSlotPropsValue.style) && {\n        style: _objectSpread(_objectSpread({}, defaultSlotPropsValue.style), externalSlotPropsValue.style)\n      }), (defaultSlotPropsValue === null || defaultSlotPropsValue === void 0 ? void 0 : defaultSlotPropsValue.sx) && (externalSlotPropsValue === null || externalSlotPropsValue === void 0 ? void 0 : externalSlotPropsValue.sx) && {\n        sx: [...(Array.isArray(defaultSlotPropsValue.sx) ? defaultSlotPropsValue.sx : [defaultSlotPropsValue.sx]), ...(Array.isArray(externalSlotPropsValue.sx) ? externalSlotPropsValue.sx : [externalSlotPropsValue.sx])]\n      });\n    };\n  }\n  const typedDefaultSlotProps = defaultSlotProps;\n  const handlers = extractHandlers(externalSlotProps, typedDefaultSlotProps);\n  const className = clsx(typedDefaultSlotProps === null || typedDefaultSlotProps === void 0 ? void 0 : typedDefaultSlotProps.className, externalSlotProps === null || externalSlotProps === void 0 ? void 0 : externalSlotProps.className);\n  return _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, defaultSlotProps), externalSlotProps), handlers), !!className && {\n    className\n  }), (typedDefaultSlotProps === null || typedDefaultSlotProps === void 0 ? void 0 : typedDefaultSlotProps.style) && (externalSlotProps === null || externalSlotProps === void 0 ? void 0 : externalSlotProps.style) && {\n    style: _objectSpread(_objectSpread({}, typedDefaultSlotProps.style), externalSlotProps.style)\n  }), (typedDefaultSlotProps === null || typedDefaultSlotProps === void 0 ? void 0 : typedDefaultSlotProps.sx) && (externalSlotProps === null || externalSlotProps === void 0 ? void 0 : externalSlotProps.sx) && {\n    sx: [...(Array.isArray(typedDefaultSlotProps.sx) ? typedDefaultSlotProps.sx : [typedDefaultSlotProps.sx]), ...(Array.isArray(externalSlotProps.sx) ? externalSlotProps.sx : [externalSlotProps.sx])]\n  });\n}","map":{"version":3,"names":["clsx","isEventHandler","key","value","thirdCharCode","charCodeAt","mergeSlotProps","externalSlotProps","defaultSlotProps","extractHandlers","externalSlotPropsValue","defaultSlotPropsValue","handlers","Object","keys","forEach","arguments","ownerState","_objectSpread","className","style","sx","Array","isArray","typedDefaultSlotProps"],"sources":["C:/achados-perdidos/frontend/node_modules/@mui/material/esm/utils/mergeSlotProps.js"],"sourcesContent":["import clsx from 'clsx';\r\n\r\n// Brought from [Base UI](https://github.com/mui/base-ui/blob/master/packages/react/src/merge-props/mergeProps.ts#L119)\r\n// Use it directly from Base UI once it's a package dependency.\r\nfunction isEventHandler(key, value) {\r\n  // This approach is more efficient than using a regex.\r\n  const thirdCharCode = key.charCodeAt(2);\r\n  return key[0] === 'o' && key[1] === 'n' && thirdCharCode >= 65 /* A */ && thirdCharCode <= 90 /* Z */ && typeof value === 'function';\r\n}\r\nexport default function mergeSlotProps(externalSlotProps, defaultSlotProps) {\r\n  if (!externalSlotProps) {\r\n    return defaultSlotProps;\r\n  }\r\n  function extractHandlers(externalSlotPropsValue, defaultSlotPropsValue) {\r\n    const handlers = {};\r\n    Object.keys(defaultSlotPropsValue).forEach(key => {\r\n      if (isEventHandler(key, defaultSlotPropsValue[key]) && typeof externalSlotPropsValue[key] === 'function') {\r\n        // only compose the handlers if both default and external slot props match the event handler\r\n        handlers[key] = (...args) => {\r\n          externalSlotPropsValue[key](...args);\r\n          defaultSlotPropsValue[key](...args);\r\n        };\r\n      }\r\n    });\r\n    return handlers;\r\n  }\r\n  if (typeof externalSlotProps === 'function' || typeof defaultSlotProps === 'function') {\r\n    return ownerState => {\r\n      const defaultSlotPropsValue = typeof defaultSlotProps === 'function' ? defaultSlotProps(ownerState) : defaultSlotProps;\r\n      const externalSlotPropsValue = typeof externalSlotProps === 'function' ? externalSlotProps({\r\n        ...ownerState,\r\n        ...defaultSlotPropsValue\r\n      }) : externalSlotProps;\r\n      const className = clsx(ownerState?.className, defaultSlotPropsValue?.className, externalSlotPropsValue?.className);\r\n      const handlers = extractHandlers(externalSlotPropsValue, defaultSlotPropsValue);\r\n      return {\r\n        ...defaultSlotPropsValue,\r\n        ...externalSlotPropsValue,\r\n        ...handlers,\r\n        ...(!!className && {\r\n          className\r\n        }),\r\n        ...(defaultSlotPropsValue?.style && externalSlotPropsValue?.style && {\r\n          style: {\r\n            ...defaultSlotPropsValue.style,\r\n            ...externalSlotPropsValue.style\r\n          }\r\n        }),\r\n        ...(defaultSlotPropsValue?.sx && externalSlotPropsValue?.sx && {\r\n          sx: [...(Array.isArray(defaultSlotPropsValue.sx) ? defaultSlotPropsValue.sx : [defaultSlotPropsValue.sx]), ...(Array.isArray(externalSlotPropsValue.sx) ? externalSlotPropsValue.sx : [externalSlotPropsValue.sx])]\r\n        })\r\n      };\r\n    };\r\n  }\r\n  const typedDefaultSlotProps = defaultSlotProps;\r\n  const handlers = extractHandlers(externalSlotProps, typedDefaultSlotProps);\r\n  const className = clsx(typedDefaultSlotProps?.className, externalSlotProps?.className);\r\n  return {\r\n    ...defaultSlotProps,\r\n    ...externalSlotProps,\r\n    ...handlers,\r\n    ...(!!className && {\r\n      className\r\n    }),\r\n    ...(typedDefaultSlotProps?.style && externalSlotProps?.style && {\r\n      style: {\r\n        ...typedDefaultSlotProps.style,\r\n        ...externalSlotProps.style\r\n      }\r\n    }),\r\n    ...(typedDefaultSlotProps?.sx && externalSlotProps?.sx && {\r\n      sx: [...(Array.isArray(typedDefaultSlotProps.sx) ? typedDefaultSlotProps.sx : [typedDefaultSlotProps.sx]), ...(Array.isArray(externalSlotProps.sx) ? externalSlotProps.sx : [externalSlotProps.sx])]\r\n    })\r\n  };\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}