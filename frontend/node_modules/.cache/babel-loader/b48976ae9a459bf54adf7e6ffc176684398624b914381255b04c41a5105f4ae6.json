{"ast":null,"code":"import _objectWithoutProperties from \"C:/achados-perdidos/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _objectSpread from \"C:/achados-perdidos/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nconst _excluded = [\"palette\", \"cssVariables\", \"colorSchemes\", \"defaultColorScheme\"];\nimport createPalette from \"./createPalette.js\";\nimport createThemeWithVars from \"./createThemeWithVars.js\";\nimport createThemeNoVars from \"./createThemeNoVars.js\";\n// eslint-disable-next-line consistent-return\nfunction attachColorScheme(theme, scheme, colorScheme) {\n  if (!theme.colorSchemes) {\n    return undefined;\n  }\n  if (colorScheme) {\n    theme.colorSchemes[scheme] = _objectSpread(_objectSpread({}, colorScheme !== true && colorScheme), {}, {\n      palette: createPalette(_objectSpread(_objectSpread({}, colorScheme === true ? {} : colorScheme.palette), {}, {\n        mode: scheme\n      })) // cast type to skip module augmentation test\n    });\n  }\n}\n\n/**\r\n * Generate a theme base on the options received.\r\n * @param options Takes an incomplete theme object and adds the missing parts.\r\n * @param args Deep merge the arguments with the about to be returned theme.\r\n * @returns A complete, ready-to-use theme object.\r\n */\nexport default function createTheme() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n      palette,\n      cssVariables = false,\n      colorSchemes: initialColorSchemes = !palette ? {\n        light: true\n      } : undefined,\n      defaultColorScheme: initialDefaultColorScheme = palette === null || palette === void 0 ? void 0 : palette.mode\n    } = options,\n    rest = _objectWithoutProperties(options, _excluded);\n  const defaultColorSchemeInput = initialDefaultColorScheme || 'light';\n  const defaultScheme = initialColorSchemes === null || initialColorSchemes === void 0 ? void 0 : initialColorSchemes[defaultColorSchemeInput];\n  const colorSchemesInput = _objectSpread(_objectSpread({}, initialColorSchemes), palette ? {\n    [defaultColorSchemeInput]: _objectSpread(_objectSpread({}, typeof defaultScheme !== 'boolean' && defaultScheme), {}, {\n      palette\n    })\n  } : undefined);\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n  if (cssVariables === false) {\n    if (!('colorSchemes' in options)) {\n      // Behaves exactly as v5\n      return createThemeNoVars(options, ...args);\n    }\n    let paletteOptions = palette;\n    if (!('palette' in options)) {\n      if (colorSchemesInput[defaultColorSchemeInput]) {\n        if (colorSchemesInput[defaultColorSchemeInput] !== true) {\n          paletteOptions = colorSchemesInput[defaultColorSchemeInput].palette;\n        } else if (defaultColorSchemeInput === 'dark') {\n          // @ts-ignore to prevent the module augmentation test from failing\n          paletteOptions = {\n            mode: 'dark'\n          };\n        }\n      }\n    }\n    const theme = createThemeNoVars(_objectSpread(_objectSpread({}, options), {}, {\n      palette: paletteOptions\n    }), ...args);\n    theme.defaultColorScheme = defaultColorSchemeInput;\n    theme.colorSchemes = colorSchemesInput;\n    if (theme.palette.mode === 'light') {\n      theme.colorSchemes.light = _objectSpread(_objectSpread({}, colorSchemesInput.light !== true && colorSchemesInput.light), {}, {\n        palette: theme.palette\n      });\n      attachColorScheme(theme, 'dark', colorSchemesInput.dark);\n    }\n    if (theme.palette.mode === 'dark') {\n      theme.colorSchemes.dark = _objectSpread(_objectSpread({}, colorSchemesInput.dark !== true && colorSchemesInput.dark), {}, {\n        palette: theme.palette\n      });\n      attachColorScheme(theme, 'light', colorSchemesInput.light);\n    }\n    return theme;\n  }\n  if (!palette && !('light' in colorSchemesInput) && defaultColorSchemeInput === 'light') {\n    colorSchemesInput.light = true;\n  }\n  return createThemeWithVars(_objectSpread(_objectSpread({}, rest), {}, {\n    colorSchemes: colorSchemesInput,\n    defaultColorScheme: defaultColorSchemeInput\n  }, typeof cssVariables !== 'boolean' && cssVariables), ...args);\n}","map":{"version":3,"names":["createPalette","createThemeWithVars","createThemeNoVars","attachColorScheme","theme","scheme","colorScheme","colorSchemes","undefined","_objectSpread","palette","mode","createTheme","options","arguments","length","cssVariables","initialColorSchemes","light","defaultColorScheme","initialDefaultColorScheme","rest","_objectWithoutProperties","_excluded","defaultColorSchemeInput","defaultScheme","colorSchemesInput","_len","args","Array","_key","paletteOptions","dark"],"sources":["C:/achados-perdidos/frontend/node_modules/@mui/material/esm/styles/createTheme.js"],"sourcesContent":["import createPalette from \"./createPalette.js\";\r\nimport createThemeWithVars from \"./createThemeWithVars.js\";\r\nimport createThemeNoVars from \"./createThemeNoVars.js\";\r\n// eslint-disable-next-line consistent-return\r\nfunction attachColorScheme(theme, scheme, colorScheme) {\r\n  if (!theme.colorSchemes) {\r\n    return undefined;\r\n  }\r\n  if (colorScheme) {\r\n    theme.colorSchemes[scheme] = {\r\n      ...(colorScheme !== true && colorScheme),\r\n      palette: createPalette({\r\n        ...(colorScheme === true ? {} : colorScheme.palette),\r\n        mode: scheme\r\n      }) // cast type to skip module augmentation test\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * Generate a theme base on the options received.\r\n * @param options Takes an incomplete theme object and adds the missing parts.\r\n * @param args Deep merge the arguments with the about to be returned theme.\r\n * @returns A complete, ready-to-use theme object.\r\n */\r\nexport default function createTheme(options = {},\r\n// cast type to skip module augmentation test\r\n...args) {\r\n  const {\r\n    palette,\r\n    cssVariables = false,\r\n    colorSchemes: initialColorSchemes = !palette ? {\r\n      light: true\r\n    } : undefined,\r\n    defaultColorScheme: initialDefaultColorScheme = palette?.mode,\r\n    ...rest\r\n  } = options;\r\n  const defaultColorSchemeInput = initialDefaultColorScheme || 'light';\r\n  const defaultScheme = initialColorSchemes?.[defaultColorSchemeInput];\r\n  const colorSchemesInput = {\r\n    ...initialColorSchemes,\r\n    ...(palette ? {\r\n      [defaultColorSchemeInput]: {\r\n        ...(typeof defaultScheme !== 'boolean' && defaultScheme),\r\n        palette\r\n      }\r\n    } : undefined)\r\n  };\r\n  if (cssVariables === false) {\r\n    if (!('colorSchemes' in options)) {\r\n      // Behaves exactly as v5\r\n      return createThemeNoVars(options, ...args);\r\n    }\r\n    let paletteOptions = palette;\r\n    if (!('palette' in options)) {\r\n      if (colorSchemesInput[defaultColorSchemeInput]) {\r\n        if (colorSchemesInput[defaultColorSchemeInput] !== true) {\r\n          paletteOptions = colorSchemesInput[defaultColorSchemeInput].palette;\r\n        } else if (defaultColorSchemeInput === 'dark') {\r\n          // @ts-ignore to prevent the module augmentation test from failing\r\n          paletteOptions = {\r\n            mode: 'dark'\r\n          };\r\n        }\r\n      }\r\n    }\r\n    const theme = createThemeNoVars({\r\n      ...options,\r\n      palette: paletteOptions\r\n    }, ...args);\r\n    theme.defaultColorScheme = defaultColorSchemeInput;\r\n    theme.colorSchemes = colorSchemesInput;\r\n    if (theme.palette.mode === 'light') {\r\n      theme.colorSchemes.light = {\r\n        ...(colorSchemesInput.light !== true && colorSchemesInput.light),\r\n        palette: theme.palette\r\n      };\r\n      attachColorScheme(theme, 'dark', colorSchemesInput.dark);\r\n    }\r\n    if (theme.palette.mode === 'dark') {\r\n      theme.colorSchemes.dark = {\r\n        ...(colorSchemesInput.dark !== true && colorSchemesInput.dark),\r\n        palette: theme.palette\r\n      };\r\n      attachColorScheme(theme, 'light', colorSchemesInput.light);\r\n    }\r\n    return theme;\r\n  }\r\n  if (!palette && !('light' in colorSchemesInput) && defaultColorSchemeInput === 'light') {\r\n    colorSchemesInput.light = true;\r\n  }\r\n  return createThemeWithVars({\r\n    ...rest,\r\n    colorSchemes: colorSchemesInput,\r\n    defaultColorScheme: defaultColorSchemeInput,\r\n    ...(typeof cssVariables !== 'boolean' && cssVariables)\r\n  }, ...args);\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}